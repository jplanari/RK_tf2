# +----------------------------------------------------------------------------+
# |                                'mod' paths                                 |
# +----------------------------------------------------------------------------+

# ModulesPathAdd:relative/or/absolute/path

ModulesPathAdd:../mods
ModulesPathAdd:./specific_mods

# +----------------------------------------------------------------------------+
# |                            Mesh initialization                             |
# +----------------------------------------------------------------------------+

SMesh:Topo:64:64:64:yes:no:no
SMesh:Geom:3.14159:1.0:1.0
SMesh:Part:2:2:1
SMesh:InitY:initTanh(1.5):smeshInit.so

# +----------------------------------------------------------------------------+
# |                                   Fields                                   |
# +----------------------------------------------------------------------------+

# Field:numComponents:field_name:domain_name

Field:1:ux_N:Nodes
Field:1:uy_N:Nodes
Field:1:uz_N:Nodes

Field:1:T_N:Nodes

# In this simulation, the number of parallel-in-time executions is determined
# by the number of components of the fields 'u*_N'.

# +----------------------------------------------------------------------------+
# |                            Boundary conditions                             |
# +----------------------------------------------------------------------------+

# BocoMat:field_name:boco_id:type(param1, ...)
# For the moment, type is one of
# Dirichlet, with one parameter per component of the field,
# Neumann, with one parameter per component of the field,
# Neumann, with no additional parameters (then the derivative is set to 0).
# BocoMat:field_name:boco_id:UserGen:function(param1, ...):mod

BocoMat:ux_N:Bottom:Dirichlet(0.0)
BocoMat:ux_N:Top   :Dirichlet(0.0)
BocoMat:ux_N:Front :Dirichlet(0.0)
BocoMat:ux_N:Back  :Dirichlet(0.0)

BocoMat:uy_N:Bottom:Dirichlet(0.0)
BocoMat:uy_N:Top   :Dirichlet(0.0)
BocoMat:uy_N:Front :Dirichlet(0.0)
BocoMat:uy_N:Back  :Dirichlet(0.0)

BocoMat:uz_N:Bottom:Dirichlet(0.0)
BocoMat:uz_N:Top   :Dirichlet(0.0)
BocoMat:uz_N:Front :Dirichlet(0.0)
BocoMat:uz_N:Back  :Dirichlet(0.0)

BocoMat:T_N:Bottom :Dirichlet(0.50)
BocoMat:T_N:Top    :Dirichlet(-0.50)
BocoMat:T_N:Front  :Neumann
BocoMat:T_N:Back   :Neumann

# +----------------------------------------------------------------------------+
# |                                  Matrices                                  |
# +----------------------------------------------------------------------------+

MatrixDefault:Vol_Lap_CC
MatrixDefault:Lap_NC
MatrixDefault:DivX_FC
MatrixDefault:DivY_FC
MatrixDefault:DivZ_FC
MatrixDefault:GradX_CF
MatrixDefault:GradY_CF
MatrixDefault:GradZ_CF
MatrixDefault:Interp_NF

# We will use a volume weighted cell-to-face / face-to-cell interpolation,
# since that is what it seems to work with the staggered formulation of the
# FSM. These volume weighted interpolators are not the default interpolators,
# so we have to initialize them by explicitly setting the pattern and the
# kernel.

Pattern:CF:p_CF_FirstNb:smeshPatterns.so
Pattern:FC:p_FC_FirstNb:smeshPatterns.so

Kernel:k_icf:k_Interp_CF_VW_ZB_FirstNb:smeshInterpolators.so
Kernel:k_ifc:k_Interp_FC_VW_ZB_FirstNb:smeshInterpolators.so

Matrix:Interp_CF:CF:k_icf
Matrix:Interp_FC:FC:k_ifc

Kernel:_1:k_One:interpolators.so
Matrix:SumFaces:FC:_1 


# For the parallel-in-time simulations to work, we can only use the CG solver,
# and it requires an SPD matrix. The current Vol_Lap_CC is symmetric, but
# negative definite so we need to negate it.

MatrixScale:Vol_Lap_CC:-1.0

# +----------------------------------------------------------------------------+
# |                                 Simulation                                 |
# +----------------------------------------------------------------------------+

# - Config ---------------------------------------------------------------------

Config:MaxIters:10000
Config:Log:CLK
Config:AlgMode:Native
#Config:AutoApplyBocos:no

HPC2Config:-profile:-overlap:-thr=18
#HPC2Config:-profile:-overlap:-arc=ocl
#HPC2Config:-profile:-overlap:-arc=nvd

Param:double:Ra     :1e6
Param:double:Pr     :0.71
Param:double:RKfct  :0.4

Param:str:RKmethod  :heunRK2

Param:int:nSims	    :1


# - Solver ---------------------------------------------------------------------

Solver_Native:Pressure_Solver:Vol_Lap_CC:150:1e-5
Solver_HPC2:Pressure_Solver:CG::Vol_Lap_CC:100:1e-4

# - Functions ------------------------------------------------------------------

ExecFunction:SetUp:init_omega        	                :utils.so
ExecFunction:SetUp:SetUp_Momentum_RK                  :fractionalStep_rk.so
ExecFunction:SetUp:init_props        	                :utils.so
ExecFunction:SetUp:SetUp_SAT_GershgorinMat_efficiency :sat.so
# We are using the library provided fractional step.

ExecFunction:Iter:Iter_SAT_GershgorinMat_efficiency   :sat.so
ExecFunction:Iter:RKiteration_energy                  :fractionalStep_rk.so
ExecFunction:Iter:monitor                             :utils.so

ExecFunction:WrapUp:WrapUp_SaveVis	                  :fileIO.so

# - Extras ---------------------------------------------------------------------

SaveVis:Prefix:data/<__SimBaseName>-Ra<Ra>-Pr<Pr>-<RKmethod>
SaveVis:Fields:T_N@Cells:ux_N@Cells:uy_N@Cells:uz_N@Cells
